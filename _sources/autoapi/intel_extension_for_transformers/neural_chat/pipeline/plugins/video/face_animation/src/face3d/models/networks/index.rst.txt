:py:mod:`intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks`
=======================================================================================================================

.. py:module:: intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks

.. autoapi-nested-parse::

   This script defines deep neural networks for Deep3DFaceRecon_pytorch



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.ResNet



Functions
~~~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnet18
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnet34
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnet50
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnet101
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnet152
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnext50_32x4d
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.resnext101_32x8d
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.wide_resnet50_2
   intel_extension_for_transformers.neural_chat.pipeline.plugins.video.face_animation.src.face3d.models.networks.wide_resnet101_2




.. py:function:: resnet18(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNet-18 model from
   `"Deep Residual Learning for Image Recognition" <https://arxiv.org/pdf/1512.03385.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnet34(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNet-34 model from
   `"Deep Residual Learning for Image Recognition" <https://arxiv.org/pdf/1512.03385.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnet50(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNet-50 model from
   `"Deep Residual Learning for Image Recognition" <https://arxiv.org/pdf/1512.03385.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnet101(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNet-101 model from
   `"Deep Residual Learning for Image Recognition" <https://arxiv.org/pdf/1512.03385.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnet152(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNet-152 model from
   `"Deep Residual Learning for Image Recognition" <https://arxiv.org/pdf/1512.03385.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnext50_32x4d(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNeXt-50 32x4d model from
   `"Aggregated Residual Transformation for Deep Neural Networks" <https://arxiv.org/pdf/1611.05431.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: resnext101_32x8d(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   ResNeXt-101 32x8d model from
   `"Aggregated Residual Transformation for Deep Neural Networks" <https://arxiv.org/pdf/1611.05431.pdf>`_.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: wide_resnet50_2(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   Wide ResNet-50-2 model from
   `"Wide Residual Networks" <https://arxiv.org/pdf/1605.07146.pdf>`_.

   The model is the same as ResNet except for the bottleneck number of channels
   which is twice larger in every block. The number of channels in outer 1x1
   convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048
   channels, and in Wide ResNet-50-2 has 2048-1024-2048.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


.. py:function:: wide_resnet101_2(pretrained: bool = False, progress: bool = True, **kwargs: Any) -> ResNet

   Wide ResNet-101-2 model from
   `"Wide Residual Networks" <https://arxiv.org/pdf/1605.07146.pdf>`_.

   The model is the same as ResNet except for the bottleneck number of channels
   which is twice larger in every block. The number of channels in outer 1x1
   convolutions is the same, e.g. last block in ResNet-50 has 2048-512-2048
   channels, and in Wide ResNet-50-2 has 2048-1024-2048.

   :param pretrained: If True, returns a model pre-trained on ImageNet
   :type pretrained: bool
   :param progress: If True, displays a progress bar of the download to stderr
   :type progress: bool


