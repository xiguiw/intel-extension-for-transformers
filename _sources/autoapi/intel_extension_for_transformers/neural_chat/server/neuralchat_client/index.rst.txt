:orphan:

:py:mod:`intel_extension_for_transformers.neural_chat.server.neuralchat_client`
===============================================================================

.. py:module:: intel_extension_for_transformers.neural_chat.server.neuralchat_client


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.neural_chat.server.neuralchat_client.TextChatClientExecutor
   intel_extension_for_transformers.neural_chat.server.neuralchat_client.VoiceChatClientExecutor
   intel_extension_for_transformers.neural_chat.server.neuralchat_client.FinetuningClientExecutor




.. py:class:: TextChatClientExecutor




   An abstract executor class of neuralchat server tasks.

   .. py:method:: execute(argv: List[str]) -> bool

      Command line entry. This method can only be accessed by a command line such as `neuralchat textchat`.

      :param argv: Arguments from command line.
      :type argv: List[str]

      :returns: Result of the command execution. `True` for a success and `False` for a failure.
      :rtype: int



.. py:class:: VoiceChatClientExecutor




   An abstract executor class of neuralchat server tasks.

   .. py:method:: execute(argv: List[str]) -> bool

      Command line entry. This method can only be accessed by a command line such as `neuralchat textchat`.

      :param argv: Arguments from command line.
      :type argv: List[str]

      :returns: Result of the command execution. `True` for a success and `False` for a failure.
      :rtype: int



.. py:class:: FinetuningClientExecutor




   An abstract executor class of neuralchat server tasks.

   .. py:method:: execute(argv: List[str]) -> bool

      Command line entry. This method can only be accessed by a command line such as `neuralchat textchat`.

      :param argv: Arguments from command line.
      :type argv: List[str]

      :returns: Result of the command execution. `True` for a success and `False` for a failure.
      :rtype: int



